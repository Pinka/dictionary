name: Circular Dependencies Check

on:
  pull_request:
    types: [opened, synchronize]

permissions:
  pull-requests: write
  contents: read

jobs:
  circular-deps-check:
    name: Check Circular Dependencies
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}
          fetch-depth: 2  # Just enough for PR and its base

      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - run: npm ci

      - name: Check base branch for circular dependencies
        id: base-check
        run: |
          git checkout ${{ github.event.pull_request.base.sha }}
          npm run check:circular:json > base-results.json || true
          echo "base_count=$(jq 'length' base-results.json || echo 0)" >> $GITHUB_OUTPUT

      - name: Check PR for circular dependencies
        id: pr-check
        run: |
          git checkout ${{ github.event.pull_request.head.sha }}
          npm run check:circular:json > pr-results.json || true
          echo "pr_count=$(jq 'length' pr-results.json || echo 0)" >> $GITHUB_OUTPUT
          
          if [ -s pr-results.json ]; then
            echo "CYCLES<<EOF" >> $GITHUB_ENV
            npm run check:circular
            echo "EOF" >> $GITHUB_ENV
          fi

      - name: Create PR comment
        uses: actions/github-script@v7
        with:
          script: |
            const cycles = process.env.CYCLES || '';
            const baseCount = parseInt('${{ steps.base-check.outputs.base_count }}') || 0;
            const prCount = parseInt('${{ steps.pr-check.outputs.pr_count }}') || 0;
            const difference = prCount - baseCount;
            
            let changeEmoji = 'ðŸŸ¡';
            let changeMessage = 'No change in circular dependencies';
            
            if (difference > 0) {
              changeEmoji = 'ðŸ”´';
              changeMessage = `Added ${difference} new circular dependencies`;
            } else if (difference < 0) {
              changeEmoji = 'ðŸŸ¢';
              changeMessage = `Removed ${Math.abs(difference)} circular dependencies`;
            }
            
            const body = `## ðŸ”„ Circular Dependencies Check
            
            ${changeEmoji} **Impact:** ${changeMessage}
            
            ${prCount > 0 ? `### Current Circular Dependencies (${prCount} total)\n\n\`\`\`\n${cycles}\n\`\`\`` : '### âœ… No Circular Dependencies Found'}
            
            ${baseCount !== prCount ? `
            ### ðŸ“Š Changes
            - Base branch: ${baseCount} circular dependencies
            - This PR: ${prCount} circular dependencies
            ` : ''}
            
            ${prCount > 0 ? '\n### ðŸ”§ Recommendations:\n' +
            '- Restructure components to avoid circular imports\n' +
            '- Move shared code to a separate module\n' +
            '- Consider using dependency injection' : ''}`;
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.name,
              issue_number: context.issue.number,
              body: body
            });
